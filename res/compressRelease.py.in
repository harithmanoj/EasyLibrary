import zipfile
import sys
import shutil

version = "@EASY_LIBRARY_VERSION@.@EASY_LIBRARY_RELEASE_TYPE@"

root = "@CMAKE_CURRENT_SOURCE_DIR@"

def release(filename, contents):
    print("Creating " + filename)
    with zipfile.ZipFile(filename + "." + version + ".zip", "w", compression=zipfile.ZIP_DEFLATED) as zip:
        for file, location in contents:
            if location is None:
                location = file
            zip.write(root + "/" + file, location)

minimal_easyMath = [
    ("@CMAKE_BINARY_DIR@/include/easyLib/version.h", "include/easyLib/version.h),
    ("include/easyMathLib/easyMath.h", None),
    ("include/easyMathLib/README.md", None),
    ("LICENSE", None),
    ("README.md", None)
]

minimal_easyLibrary = [
    ("@CMAKE_BINARY_DIR@/include/easyLib/version.h", "include/easyLib/version.h),
    ("include/easyMathLib/easyMath.h", None),
    ("include/easyMathLib/README.md", None),
    ("include/easyParseLib/easyParse.h", None),
    ("include/easyParseLib/ArgParser.h", None),
    ("include/easyParseLib/README.md", None),
    ("src/easyParseLib/easyParse.cpp", None),
    ("src/easyParseLib/argParser.cpp", None),
    ("LICENSE", None),
    ("README.md", None)
]

build = [
    ("@CMAKE_BINARY_DIR@/include/easyLib/version.h", "include/easyLib/version.h),
    ("include/easyMathLib/easyMath.h", None),
    ("include/easyMathLib/README.md", None),
    ("include/easyParseLib/easyParse.h", None),
    ("include/easyParseLib/ArgParser.h", None),
    ("include/easyParseLib/README.md", None),
    ("src/easyParseLib/easyParse.cpp", None),
    ("src/easyParseLib/argParser.cpp", None),
    ("LICENSE", None),
    ("README.md", None),
    ("CMakeLists.txt", None),
    ("CMakePresets.json", None)
]


if not os.path.exists(root + "/build/releaseZip"):
    os.makedirs(root + "/build/releaseZip")

release(root + "/build/releaseZip/easyLibrary.minimal.easyMath", minimal_easyMath)
release(root + "/build/releaseZip/easyLibrary.minimal", minimal_easyLibrary)
release(root + "/build/releaseZip/easyLibrary.build", build)
shutil.copyfile("@CMAKE_BINARY_DIR@/include/easyLib/version.h", root + "/build/releaseZip/version.h")
